<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/02/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>基础笔记</title>
    <url>/2021/01/27/%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="基础01：注释"><a href="#基础01：注释" class="headerlink" title="基础01：注释"></a>基础01：注释</h1><p><strong>书写注释是一个非常好的习惯</strong><br><strong>平时写代码一定要注意规范</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//我是单行注释  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">我是多行注释  </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** 我是文档注释  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Aiiibolo</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">// 有趣的代码注释（网上找）</span></span><br></pre></td></tr></table></figure>
<h1 id="基础02：关键字和标识符"><a href="#基础02：关键字和标识符" class="headerlink" title="基础02：关键字和标识符"></a>基础02：关键字和标识符</h1><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p>固定的关键字</p>
<h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>所有组成部分的类名，变量名以及方法名都叫标识符</p>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/300bd16c5d40d123.png"></p>
<h1 id="基础03：数据类型讲解"><a href="#基础03：数据类型讲解" class="headerlink" title="基础03：数据类型讲解"></a>基础03：数据类型讲解</h1><h2 id="强类型语言"><a href="#强类型语言" class="headerlink" title="强类型语言"></a>强类型语言</h2><ul>
<li>要求变量的使用严格符合规定所变量都必须先定义后使用</li>
</ul>
<h2 id="弱语言类型"><a href="#弱语言类型" class="headerlink" title="弱语言类型"></a>弱语言类型</h2><h2 id="Java的数据类型分为两大类型"><a href="#Java的数据类型分为两大类型" class="headerlink" title="Java的数据类型分为两大类型"></a>Java的数据类型分为两大类型</h2><ul>
<li>基本类型</li>
<li>引用类型</li>
</ul>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/90b9f438de8065a8.png"></p>
<p><strong>String不是一个关键字 而是一个类</strong></p>
<p><strong>string是一个引用类型</strong></p>
<h1 id="基础04-数据类型扩展及面试题"><a href="#基础04-数据类型扩展及面试题" class="headerlink" title="基础04:数据类型扩展及面试题"></a>基础04:数据类型扩展及面试题</h1><p><img src="https://ftp.bmp.ovh/imgs/2021/01/ee47704cc8610a1b.png"></p>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/aac9359cc36b088b.png"></p>
<h2 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/01/f2c2e697bbf1d42e.png"></p>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/8a6c3ff210a55c2d.png"></p>
<p>u00613转义以后就是小写的a</p>
<p>转义字符</p>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/787cbfff62a998ad.png"></p>
<p><img src="https://ftp.bmp.ovh/imgs/2021/01/f2827cb7b4ef6046.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (flag==<span class="keyword">true</span>)&#123;&#125; <span class="comment">// 新手</span></span><br><span class="line"><span class="keyword">if</span> (flag)&#123;&#125; <span class="comment">//</span></span><br><span class="line"><span class="comment">// less is more!代码要精简易读</span></span><br></pre></td></tr></table></figure>


<h1 id="基础05-类型转换"><a href="#基础05-类型转换" class="headerlink" title="基础05:类型转换"></a>基础05:类型转换</h1><ul>
<li><p>Java时强类型语言，进行运算的时候需要用到类型转换</p>
<p>低——————————————&gt;高</p>
<p>byte,short,char,-&gt;int-&gt;long-&gt;float-&gt;double</p>
</li>
<li><p>运算时，不同类型的数据先转换成同一类型，然后再进行运算</p>
<p>float是32位，long是64位，为什么float比long更高呢？因为浮点数（小数）优先级比整数高</p>
</li>
</ul>
<h2 id="强制转换-1"><a href="#强制转换-1" class="headerlink" title="强制转换"></a>强制转换</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class demo5 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int i &#x3D; 130;</span><br><span class="line">        byte b &#x3D; (byte) i; &#x2F;&#x2F; 内存溢出  内存溢出以后输出的值就完全不可预见了</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        &#x2F;&#x2F; 强制转换的格式 （类型）变量名  高--低</span><br><span class="line">        &#x2F;&#x2F; 自动转换 低--高</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 输出结果</span><br><span class="line">130</span><br><span class="line">-126</span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="自动转换"><a href="#自动转换" class="headerlink" title="自动转换"></a>自动转换</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">130</span>;</span><br><span class="line">        <span class="keyword">double</span> b = i;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="number">130</span></span><br><span class="line"><span class="number">130.0</span></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>类型转换时 由高到低需要强制转换，而低到高则是自动转换</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">int</span> d = c+<span class="number">1</span>; <span class="comment">//自动转换 char转换成int（低到高 ）</span></span><br><span class="line">        System.out.println(c); <span class="comment">// char是一个数字？</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)d); <span class="comment">// 强制转换</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">a</span><br><span class="line"><span class="number">98</span></span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> money=<span class="number">10_0000_0000</span>; <span class="comment">//JDK7特性 数字之前可以用下划线隔开</span></span><br><span class="line">        <span class="keyword">int</span> years=<span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> toatl =money*years;<span class="comment">//-1474836480 计算的时候溢出了</span></span><br><span class="line">        <span class="keyword">long</span> total2=money*years;<span class="comment">//-1474836480 结果默认是int 转换之前已经溢出</span></span><br><span class="line">        <span class="keyword">long</span> total3=money*(<span class="keyword">long</span>)years;<span class="comment">//先把一个数转换为long结果就不会溢出</span></span><br><span class="line">        System.out.println(toatl);</span><br><span class="line">        System.out.println(total2);</span><br><span class="line">        System.out.println(total3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">-<span class="number">1474836480</span></span><br><span class="line">-<span class="number">1474836480</span></span><br><span class="line"><span class="number">20000000000</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="基础06：变量，常量，作用域"><a href="#基础06：变量，常量，作用域" class="headerlink" title="基础06：变量，常量，作用域"></a>基础06：变量，常量，作用域</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul>
<li>Java是一种强类型语言，每个变量都必须声明其类型</li>
<li>Java变量是程序中最基本的存储单元</li>
</ul>
<h3 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h3><ul>
<li>类名首字母大写和驼峰原则 Man，GodMan</li>
<li>类成员变量名 monthSalary，局部变量，方法名首字母小写和驼峰原则 run()，runRun()</li>
<li>常量所有字母大写加下划线 MAX_VALUE</li>
</ul>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo08</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例变量：从属于对象</span></span><br><span class="line">    <span class="comment">//布尔值：不赋值时默认是false</span></span><br><span class="line">    <span class="comment">//除了基本类型和布尔值：其余的默认值都是null</span></span><br><span class="line">    String name; </span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">double</span> salary = <span class="number">2500</span>;</span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">        demo08 Demo08 =<span class="keyword">new</span> demo08();<span class="comment">//如果没有new这个对象的话，上面的类变量age就无法输出（salary同理），或者选择再声明变量的时候加一个static即可输出（使用）</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        System.out.println(i); <span class="comment">// 局部变量：必须声明和初始化值（否则不能使用）</span></span><br><span class="line">        System.out.println(Demo08.name);   <span class="comment">// string是一个引用类型所以在不赋值的情况下输出null</span></span><br><span class="line">        System.out.println(Demo08.age); <span class="comment">// 基本类型不赋值时，默认输出0，0.0</span></span><br><span class="line">        System.out.println(salary);<span class="comment">//在没有new Demo08的时候这个实例变量也能输出因为前面有static修饰</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 其他方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="keyword">null</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2500.0</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>


<h1 id="基础07：运算符-优先级（）"><a href="#基础07：运算符-优先级（）" class="headerlink" title="基础07：运算符:   优先级（）"></a>基础07：运算符:   <strong>优先级（）</strong></h1><h2 id="算术运算符-：-，-，-，-，"><a href="#算术运算符-：-，-，-，-，" class="headerlink" title="算术运算符 ：+，-，*，/，%"></a>算术运算符 ：+，-，*，/，%</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ctrl+d 复制当前到下一行</span></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">21</span>;</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">40</span>;</span><br><span class="line">        System.out.println(a+b);</span><br><span class="line">        System.out.println(a-b);</span><br><span class="line">        System.out.println(a*b);</span><br><span class="line">        System.out.println(a/b);<span class="comment">//结果应该是0.5 但是类型是int所以只有整数。如要输出正确结果应该println(（double）a/b)</span></span><br><span class="line">        System.out.println(c%a); <span class="comment">//  c/a    21/10 = 2....1   %是取余运算符也叫 模运算</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">30</span></span><br><span class="line">-<span class="number">10</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="number">0</span>  <span class="comment">//结果应该是0.5 但是类型是int所以只有整数。如要输出正确结果应该println(（double）a/b)</span></span><br><span class="line"><span class="number">1</span>  <span class="comment">//  c/a    21/10 = 2....1   %是取余运算符</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> a = <span class="number">123123123123123L</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">short</span> c = (<span class="keyword">short</span>) <span class="number">10.5</span>;</span><br><span class="line">        <span class="keyword">byte</span> d = <span class="number">8</span>;</span><br><span class="line">        System.out.println(a+b+c); <span class="comment">// long</span></span><br><span class="line">        System.out.println(b+c+d); <span class="comment">// int</span></span><br><span class="line">        System.out.println(c+d); <span class="comment">// int</span></span><br><span class="line">        System.out.println(c+(<span class="keyword">double</span>)d); <span class="comment">// double</span></span><br><span class="line">        <span class="comment">// 如果运算操作中有long型输出的值就为long，如果有double则一定是 double，如果有int或者其他类型则都为int</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="number">123123123123256</span></span><br><span class="line"><span class="number">141</span> <span class="comment">//应该为141.5</span></span><br><span class="line"><span class="number">18</span>  <span class="comment">//应该为18.5</span></span><br><span class="line"><span class="number">18.0</span></span><br><span class="line">    <span class="comment">// 如果运算操作中有long型输出的值就为long，如果有double则一定是 double，如果有int或者其他类型则都为int，所以结果不精准</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>


<h1 id="基础08：一元运算符：-–-初识Math类"><a href="#基础08：一元运算符：-–-初识Math类" class="headerlink" title="基础08：一元运算符： ++ –  初识Math类"></a>基础08：一元运算符： ++ –  初识Math类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ++ -- 自增 直减 一元运算</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> b = a++; <span class="comment">// 执行这行代码时，先给b赋值。再自增</span></span><br><span class="line">        <span class="comment">//  a=a+1 </span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        <span class="comment">// a = a+1</span></span><br><span class="line">        <span class="keyword">int</span> c = ++a; <span class="comment">//执行这行代码时，先自增，再给c赋值</span></span><br><span class="line">        <span class="comment">// 幂运算 要用到Math类</span></span><br><span class="line">        <span class="keyword">double</span> pow =  Math.pow(<span class="number">2</span>,<span class="number">3</span>); <span class="number">2</span>^<span class="number">3</span> <span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8.0</span></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>


<h2 id="关系运算符-gt-，-lt-，-gt-，-lt-，-，"><a href="#关系运算符-gt-，-lt-，-gt-，-lt-，-，" class="headerlink" title="关系运算符 &gt;，&lt;，&gt;=，&lt;=，==，!="></a>关系运算符 &gt;，&lt;，&gt;=，&lt;=，==，!=</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 关系运算符的结果： 正确。错误  布尔值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> c =<span class="number">21</span>;</span><br><span class="line">        System.out.println(a&gt;b);</span><br><span class="line">        System.out.println(a&lt;b);</span><br><span class="line">        System.out.println(a==b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">false</span></span><br><span class="line"><span class="keyword">true</span></span><br><span class="line"><span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>


<h1 id="基础09：逻辑运算符：-amp-amp-，-，！"><a href="#基础09：逻辑运算符：-amp-amp-，-，！" class="headerlink" title="基础09：逻辑运算符：&amp;&amp;，||，！"></a>基础09：逻辑运算符：&amp;&amp;，||，！</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> a=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b=<span class="keyword">false</span>;</span><br><span class="line">        System.out.println(a&amp;&amp;b);<span class="comment">//逻辑与运算</span></span><br><span class="line">        System.out.println(a||b);<span class="comment">//逻辑或运算</span></span><br><span class="line">        System.out.println(!(a&amp;&amp;b));<span class="comment">//逻辑非运算</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 短路运算</span></span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">boolean</span> d = (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>); <span class="comment">//在判断出c&lt;4为false时，直接输出结果为false后面的（c++&lt;4）就没有执行，后面输出的c=10即可证明</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">        System.out.println(c);<span class="comment">// c++没有执行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="keyword">false</span></span><br><span class="line"><span class="keyword">true</span></span><br><span class="line"><span class="keyword">true</span></span><br><span class="line"><span class="keyword">false</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<h2 id="位运算符-amp-，-，-，-，-gt-gt-，-lt-lt-，-gt-gt-gt"><a href="#位运算符-amp-，-，-，-，-gt-gt-，-lt-lt-，-gt-gt-gt" class="headerlink" title="位运算符   &amp;，|，^，~，&gt;&gt;， &lt;&lt;， &gt;&gt;&gt;"></a>位运算符   &amp;，|，^，~，&gt;&gt;， &lt;&lt;， &gt;&gt;&gt;</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * A = 0011 1100</span></span><br><span class="line"><span class="comment">        * B = 0000 1101</span></span><br><span class="line"><span class="comment">        * A&amp;B = 0000 1100</span></span><br><span class="line"><span class="comment">        * A|B = 0011 1101</span></span><br><span class="line"><span class="comment">        * A^B = 0011 0001 //相同为0，不相同为1</span></span><br><span class="line"><span class="comment">        * ~B = 1111 0010</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * 2*8 = 16 2*2*2*2  常见面试题  2*8如何计算最快   //和计算机组成原理相关</span></span><br><span class="line"><span class="comment">        * &lt;&lt; *2</span></span><br><span class="line"><span class="comment">        * &gt;&gt; /2</span></span><br><span class="line"><span class="comment">        * 0000 0000   0</span></span><br><span class="line"><span class="comment">        * 0000 0001   1</span></span><br><span class="line"><span class="comment">        * 0000 0010   2</span></span><br><span class="line"><span class="comment">        * 0000 0011   3</span></span><br><span class="line"><span class="comment">        * 0000 0100   4</span></span><br><span class="line"><span class="comment">        * 0000 1000   8</span></span><br><span class="line"><span class="comment">        * 0001 0000   16</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure>


<h2 id="扩展运算符：-，-，-，"><a href="#扩展运算符：-，-，-，" class="headerlink" title="扩展运算符：+=，-=，*=，/="></a>扩展运算符：+=，-=，*=，/=</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">        a+=b;  <span class="comment">// a=a+b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a-=b; <span class="comment">// a=a-b</span></span><br><span class="line">        System.out.println(a); </span><br><span class="line">        <span class="comment">// 字符串连接符 +</span></span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>+a+b);<span class="comment">// 如果前面有“”（string类型）这回直接拼接起来</span></span><br><span class="line">        System.out.println(a+b+<span class="string">&quot;&quot;</span>);<span class="comment">// 前面会先相加再加后面的字符串  输出的30也是字符串（string）而不是int，可以通过  int c = a+b+&quot;&quot; 查看报错得知</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1020</span></span><br><span class="line"><span class="number">30</span>  <span class="comment">// 输出的30也是字符串（string）而不是int，可以通过  int c = a+b+&quot;&quot; 查看报错得知</span></span><br></pre></td></tr></table></figure>


<h1 id="基础10：条件运算符：？-："><a href="#基础10：条件运算符：？-：" class="headerlink" title="基础10：条件运算符：？ ："></a>基础10：条件运算符：？ ：</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// x?y:z</span></span><br><span class="line">        <span class="comment">//如果x==true,则结果为y，否则为z</span></span><br><span class="line">        <span class="keyword">int</span> score =<span class="number">80</span>;</span><br><span class="line">        String type = score&lt;<span class="number">60</span> ? <span class="string">&quot;不及格&quot;</span>:<span class="string">&quot;及格&quot;</span>;</span><br><span class="line">        System.out.println(type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"></span><br><span class="line">及格</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="基础11：包机制"><a href="#基础11：包机制" class="headerlink" title="基础11：包机制"></a>基础11：包机制</h1><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ul>
<li>为了更好的组织类，用于区别类名的命名空间</li>
<li>一般用公司域名作为包名</li>
<li>为了使用一个包的成员，需要再Java程序中导入该包。使用<strong>important</strong>导入</li>
<li>important com.kuang.base* 导入base包里的全部内容</li>
</ul>
<h1 id="基础12：JavaDoc"><a href="#基础12：JavaDoc" class="headerlink" title="基础12：JavaDoc"></a>基础12：JavaDoc</h1><ul>
<li>javadoc命令是用来生成自己API文档的</li>
</ul>
<p>// 通过命令行<br>F:\NewCode\基础语法\src\operator&gt;javadoc Doc -encoding UTF-8 -charset UTF-8 Doc.java  </p>
<p>//还可以通过IDEA生成<br><a class="link"   href="https://blog.csdn.net/weixin_42140580/article/details/89635775" >IDEA生成帮助文档<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;  </span><br><span class="line">  </span><br><span class="line">/\*\*  </span><br><span class="line"> \* <span class="meta">@author</span> xuan  </span><br><span class="line"> \* <span class="meta">@version</span> <span class="number">1.0</span>  </span><br><span class="line"> \* <span class="meta">@since</span> <span class="number">1.5</span>  </span><br><span class="line"> \*/  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Doc</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    /\*\*  </span><br><span class="line"> \* <span class="meta">@Author</span> xuan  </span><br><span class="line"> \* <span class="meta">@version</span> <span class="number">1.0</span>  </span><br><span class="line"> \* <span class="meta">@param</span> args  </span><br><span class="line"> \* <span class="meta">@throws</span> Exception  </span><br><span class="line"> \*/ String name;  </span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">test</span> <span class="params">(String name)</span> <span class="keyword">throws</span> Exception</span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> name;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>方法</title>
    <url>/2021/01/31/%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="1-何谓方法"><a href="#1-何谓方法" class="headerlink" title="1.何谓方法"></a>1.何谓方法</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-27%20at%2018.02.33%402x.png"></p>
<h1 id="2-方法的定义和调用"><a href="#2-方法的定义和调用" class="headerlink" title="2.方法的定义和调用"></a>2.方法的定义和调用</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2016.52.06%402x.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> src.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//这里创建了一个scanner的对象来接受键盘数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数字a和数字b&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;<span class="comment">//因为是两个数字比较大小，所以用了hasNextInt</span></span><br><span class="line">            <span class="keyword">int</span> c = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span> d = scanner.nextInt();<span class="comment">//把键盘接受的值赋值给两个变量</span></span><br><span class="line">            <span class="keyword">int</span> realmax = max(c,d);<span class="comment">//把上面两个变量的值传递给方法来比较大小，然后将值传递给realmax</span></span><br><span class="line">            System.out.println(realmax);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;<span class="comment">//定义了一个比大小的方法</span></span><br><span class="line">        <span class="keyword">int</span> resault = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;两个数相等&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//这行代码有 终止方法的作用</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">            resault = a;<span class="comment">//不能直接在这里return a ，因为return要在方法的末尾，所以定义一个变量来接受a的值然后在方法的末尾return</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resault = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resault;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a class="link"   href="https://www.cnblogs.com/binyue/p/3862276.html" >拓展：值传递（Java），引用传递<i class="fas fa-external-link-alt"></i></a></p>
<h1 id="3-方法重载"><a href="#3-方法重载" class="headerlink" title="3.方法重载"></a>3.方法重载</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2017.50.36%402x.png"></p>
<blockquote>
<p>就拿简单的比大小来说，可以创建两个比大小的方法，方法名完全相同，但是一个可以是double类型，一个是int类型，这样就构成了方法的重载，也就是形参的类型不同。或者说两个方法都是int类型，但是一个比较三个数的大小，一个比较两个数的大小，这也是方法的重载。<strong>程序会根据你输入的参数类型，个数等调用相对应的方法</strong>。</p>
</blockquote>
<h1 id="4-命令行传参"><a href="#4-命令行传参" class="headerlink" title="4.命令行传参"></a>4.命令行传参</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2018.57.39%402x.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> src.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; args.length;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]&quot;</span>+args[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.06.23%402x.png"></p>
<p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.01.44%402x.png"></p>
<p>运行的时候需要加上完整的包名</p>
<p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.16.17%402x.png"></p>
<p>运行结果如下</p>
<p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.04.12%402x.png"></p>
<h1 id="5-可变参数"><a href="#5-可变参数" class="headerlink" title="5.可变参数"></a>5.可变参数</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.45.25%402x.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> src.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        printMax(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>);</span><br><span class="line">        printMax(<span class="keyword">new</span> <span class="keyword">double</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">10</span>&#125;);<span class="comment">//这里就可以说明可变参数实质上是一个数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMax</span><span class="params">(<span class="keyword">double</span>...number)</span></span>&#123;<span class="comment">//可变参数，不确定有多少个的情况下就可以用可变参数</span></span><br><span class="line">        <span class="keyword">if</span>(number.length==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> result = number[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;number.length;i++)&#123;<span class="comment">//排序</span></span><br><span class="line">           <span class="keyword">if</span> (number[i]&gt;result)&#123;</span><br><span class="line">               result = number[i];</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为：&quot;</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">最大值为：<span class="number">6.0</span></span><br><span class="line">最大值为：<span class="number">10.0</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="6-递归"><a href="#6-递归" class="headerlink" title="6.递归"></a>6.递归</h1><p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.46.30%402x.png"></p>
<p><img src="https://raw.githubusercontent.com/aiiibolo/image/master/CleanShot%202021-01-28%20at%2019.48.55%402x.png"></p>
<p>这个递归没有递归头  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> src.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 6! = 6*5*4*3*2*1 阶乘</span></span><br><span class="line">        System.out.println(f(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> i*f(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p><strong>递归要少用，而且要用小一点的数字，否则计算机带不动</strong></p>
]]></content>
  </entry>
  <entry>
    <title>流程控制</title>
    <url>/2021/01/30/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="1-用户交互Scanner"><a href="#1-用户交互Scanner" class="headerlink" title="1. 用户交互Scanner"></a>1. 用户交互Scanner</h1><blockquote>
<p><strong>next不会接受空白数据</strong></p>
</blockquote>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个扫描器对象,用户接受键盘数据</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用next方式接受&quot;</span>);</span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">         <span class="keyword">if</span> (scanner.hasNext())&#123; <span class="comment">// if (scanner.hasnext()==ture)</span></span><br><span class="line">             <span class="comment">//使用next方式接受</span></span><br><span class="line">             String str = scanner.next();<span class="comment">//会等待用户输入以后再执行下一步</span></span><br><span class="line">             System.out.println(<span class="string">&quot;输出的内容为&quot;</span>+str);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//凡是IO流的类不关闭的话会一直占用资源，要养成良好的习惯用完就关</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>使用nextLine接受数据会接受全部数据</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用nextLine方式接受&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext())&#123;</span><br><span class="line">            String str = scanner.nextLine();</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p> 不带if 直接接收数据（就是普通的输入不用关注）</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String str = scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+ str);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>判断接收的是否是小数和整数 </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从键盘接受数据</span></span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">0.0f</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextInt())&#123;</span><br><span class="line">             i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;整数数据：&quot;</span>+ i);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是整数！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入小数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextFloat())&#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;小数数据：&quot;</span>+ f);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是小数！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="2-顺序结构"><a href="#2-顺序结构" class="headerlink" title="2. 顺序结构"></a>2. 顺序结构</h1><ul>
<li>Java的基本结构就是顺序结构，除非特别指明就按照一句一句的执行</li>
<li>顺序结构是最简单的算法结构</li>
</ul>
<h1 id="3-选择结构"><a href="#3-选择结构" class="headerlink" title="3. 选择结构"></a>3. 选择结构</h1><h2 id="if-单选择结构"><a href="#if-单选择结构" class="headerlink" title="if 单选择结构"></a>if 单选择结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ifDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入内容：&quot;</span>);</span><br><span class="line">        String s = scanner.nextLine();</span><br><span class="line">        <span class="comment">// equal用来判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;Hello&quot;</span>))&#123;  <span class="comment">// if后面加布尔值表达式</span></span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;End&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="if-双选择结构"><a href="#if-双选择结构" class="headerlink" title="if 双选择结构"></a>if 双选择结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ifDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩分数&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">60</span>)&#123; <span class="comment">// if后面加布尔值表达式</span></span><br><span class="line">            System.out.println(<span class="string">&quot;分数及格&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分数不及格&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="if-多选择结构"><a href="#if-多选择结构" class="headerlink" title="if 多选择结构"></a>if 多选择结构</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package struct;</span><br><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class ifDemo03 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner scanner &#x3D; new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;请输入成绩&quot;);</span><br><span class="line">        int score &#x3D; scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        if(score&gt;&#x3D;90&amp;&amp;score&lt;100)&#123;</span><br><span class="line">            System.out.println(&quot;A&quot;);</span><br><span class="line">        &#125;else if(score&gt;&#x3D;80&amp;&amp;score&lt;90)&#123;</span><br><span class="line">            System.out.println(&quot;B&quot;);</span><br><span class="line">        &#125;else if(score&lt;80&amp;&amp;score&gt;&#x3D;0)&#123;</span><br><span class="line">            System.out.println(&quot;C&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="嵌套的if结构"><a href="#嵌套的if结构" class="headerlink" title="嵌套的if结构"></a>嵌套的if结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ifDemo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">60</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(score&gt;=<span class="number">90</span>&amp;&amp;score&lt;<span class="number">100</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="switch多选择"><a href="#switch多选择" class="headerlink" title="switch多选择"></a>switch多选择</h2><p><strong>JavaSE7之前只支持byte，short，int,char  7之后支持了String，同时case标签必须为字符串常量或者字面量</strong></p>
<p>String—字符的本质还是数字，通过hashcode判断是否相等  java—class（字节码文件）—-反编译（IDEA就可以反编译）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">switchDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> grade = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">// 如果不加break就会发生case穿透，接下来等每一个值都会输出</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">            <span class="keyword">default</span>:    </span><br><span class="line">                System.out.println(<span class="string">&quot;未知等级&quot;</span>); <span class="comment">//上面所有的值不匹配则会执行default</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<h1 id="4-循环结构"><a href="#4-循环结构" class="headerlink" title="4. 循环结构"></a>4. 循环结构</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">whileDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//输出1~100</span></span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">whileDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//计算1+2+3+...100=？</span></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">            sum=sum+i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h2><p>do…while至少会执行一次</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">doWhileDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            sum=sum+i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span> (i&lt;=<span class="number">100</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">forDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;<span class="comment">//初始化条件</span></span><br><span class="line">        <span class="keyword">while</span> (a &lt;= <span class="number">100</span>) &#123;<span class="comment">//条件判断</span></span><br><span class="line">            System.out.println(a);<span class="comment">//循环体</span></span><br><span class="line">            a += <span class="number">2</span>;<span class="comment">//迭代</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;================while循环结束===================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;<span class="comment">//初始化条件;//条件判断;//迭代</span></span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;================for循环结束===================&quot;</span>);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="练习1：-计算0-100之间的奇数和偶数的和"><a href="#练习1：-计算0-100之间的奇数和偶数的和" class="headerlink" title="练习1：  计算0~100之间的奇数和偶数的和"></a>练习1：  计算0~100之间的奇数和偶数的和</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">forDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//计算0~100之间的奇数和偶数的和</span></span><br><span class="line">        <span class="keyword">int</span> oddsum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> evensum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                oddsum+=i;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                evensum+=i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数的和=&quot;</span>+oddsum);</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数的和=&quot;</span>+evensum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="练习2：-用while或者for循环输出1-1000之间能被5整除的数，并且每行输出三个"><a href="#练习2：-用while或者for循环输出1-1000之间能被5整除的数，并且每行输出三个" class="headerlink" title="练习2：  用while或者for循环输出1-1000之间能被5整除的数，并且每行输出三个"></a>练习2：  用while或者for循环输出1-1000之间能被5整除的数，并且每行输出三个</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">forDemo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用while或者for循环输出1-1000之间能被5整除的数，并且每行输出三个</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i % (<span class="number">5</span> * <span class="number">3</span>) == <span class="number">0</span>) &#123;<span class="comment">//每行</span></span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="comment">//System.out.print(&quot;\n&quot;);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//println 输出完会换行</span></span><br><span class="line">                <span class="comment">//print 输出完不会换行    所以输出“\n”换行  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="练习3：-打印9-9乘法表"><a href="#练习3：-打印9-9乘法表" class="headerlink" title="练习3：  打印9*9乘法表"></a>练习3：  打印9*9乘法表</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">forDemo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=j; i++) &#123;</span><br><span class="line">                System.out.print(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+(j*i)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>	</span><br><span class="line"><span class="number">2</span>*<span class="number">1</span>=<span class="number">2</span>	<span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>	</span><br><span class="line"><span class="number">3</span>*<span class="number">1</span>=<span class="number">3</span>	<span class="number">3</span>*<span class="number">2</span>=<span class="number">6</span>	<span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>	</span><br><span class="line"><span class="number">4</span>*<span class="number">1</span>=<span class="number">4</span>	<span class="number">4</span>*<span class="number">2</span>=<span class="number">8</span>	<span class="number">4</span>*<span class="number">3</span>=<span class="number">12</span>	<span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>	</span><br><span class="line"><span class="number">5</span>*<span class="number">1</span>=<span class="number">5</span>	<span class="number">5</span>*<span class="number">2</span>=<span class="number">10</span>	<span class="number">5</span>*<span class="number">3</span>=<span class="number">15</span>	<span class="number">5</span>*<span class="number">4</span>=<span class="number">20</span>	<span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span>	</span><br><span class="line"><span class="number">6</span>*<span class="number">1</span>=<span class="number">6</span>	<span class="number">6</span>*<span class="number">2</span>=<span class="number">12</span>	<span class="number">6</span>*<span class="number">3</span>=<span class="number">18</span>	<span class="number">6</span>*<span class="number">4</span>=<span class="number">24</span>	<span class="number">6</span>*<span class="number">5</span>=<span class="number">30</span>	<span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span>	</span><br><span class="line"><span class="number">7</span>*<span class="number">1</span>=<span class="number">7</span>	<span class="number">7</span>*<span class="number">2</span>=<span class="number">14</span>	<span class="number">7</span>*<span class="number">3</span>=<span class="number">21</span>	<span class="number">7</span>*<span class="number">4</span>=<span class="number">28</span>	<span class="number">7</span>*<span class="number">5</span>=<span class="number">35</span>	<span class="number">7</span>*<span class="number">6</span>=<span class="number">42</span>	<span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span>	</span><br><span class="line"><span class="number">8</span>*<span class="number">1</span>=<span class="number">8</span>	<span class="number">8</span>*<span class="number">2</span>=<span class="number">16</span>	<span class="number">8</span>*<span class="number">3</span>=<span class="number">24</span>	<span class="number">8</span>*<span class="number">4</span>=<span class="number">32</span>	<span class="number">8</span>*<span class="number">5</span>=<span class="number">40</span>	<span class="number">8</span>*<span class="number">6</span>=<span class="number">48</span>	<span class="number">8</span>*<span class="number">7</span>=<span class="number">56</span>	<span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span>	</span><br><span class="line"><span class="number">9</span>*<span class="number">1</span>=<span class="number">9</span>	<span class="number">9</span>*<span class="number">2</span>=<span class="number">18</span>	<span class="number">9</span>*<span class="number">3</span>=<span class="number">27</span>	<span class="number">9</span>*<span class="number">4</span>=<span class="number">36</span>	<span class="number">9</span>*<span class="number">5</span>=<span class="number">45</span>	<span class="number">9</span>*<span class="number">6</span>=<span class="number">54</span>	<span class="number">9</span>*<span class="number">7</span>=<span class="number">63</span>	<span class="number">9</span>*<span class="number">8</span>=<span class="number">72</span>	<span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span>	</span><br></pre></td></tr></table></figure>
<h3 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h3><ul>
<li><p>JDK5引入</p>
</li>
<li><p><strong>主要用来数组或集合的的增强型for循环</strong></p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*格式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">for(声明语句：表达式)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//执行代码</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">forDemo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] number=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line">        <span class="comment">//遍历数组的元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x:number)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            System.out.println(number[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="5-break-amp-continue"><a href="#5-break-amp-continue" class="headerlink" title="5. break&amp;continue"></a>5. break&amp;continue</h1><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">breakDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//用于强行推出循环过程，不会再继续执行下一次循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>	<span class="number">2</span>	<span class="number">3</span>	<span class="number">4</span>	<span class="number">5</span>	<span class="number">6</span>	<span class="number">7</span>	<span class="number">8</span>	<span class="number">9</span>	<span class="number">10</span>	<span class="number">11</span>	<span class="number">12</span>	<span class="number">13</span>	<span class="number">14</span>	<span class="number">15</span>	<span class="number">16</span>	<span class="number">17</span>	<span class="number">18</span>	<span class="number">19</span>	<span class="number">20</span>	<span class="number">21</span>	<span class="number">22</span>	<span class="number">23</span>	<span class="number">24</span>	<span class="number">25</span>	<span class="number">26</span>	<span class="number">27</span>	<span class="number">28</span>	<span class="number">29</span>	<span class="number">30</span>	</span><br><span class="line"><span class="comment">// 到30以后就结束了，不会继续执行之后的循环 强行退出循环</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContinueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>	<span class="number">2</span>	<span class="number">3</span>	<span class="number">4</span>	<span class="number">5</span>	<span class="number">6</span>	<span class="number">7</span>	<span class="number">8</span>	<span class="number">9</span>	</span><br><span class="line"><span class="number">11</span>	<span class="number">12</span>	<span class="number">13</span>	<span class="number">14</span>	<span class="number">15</span>	<span class="number">16</span>	<span class="number">17</span>	<span class="number">18</span>	<span class="number">19</span>	</span><br><span class="line"><span class="number">21</span>	<span class="number">22</span>	<span class="number">23</span>	<span class="number">24</span>	<span class="number">25</span>	<span class="number">26</span>	<span class="number">27</span>	<span class="number">28</span>	<span class="number">29</span>	</span><br><span class="line"><span class="number">31</span>	<span class="number">32</span>	<span class="number">33</span>	<span class="number">34</span>	<span class="number">35</span>	<span class="number">36</span>	<span class="number">37</span>	<span class="number">38</span>	<span class="number">39</span>	</span><br><span class="line"><span class="number">41</span>	<span class="number">42</span>	<span class="number">43</span>	<span class="number">44</span>	<span class="number">45</span>	<span class="number">46</span>	<span class="number">47</span>	<span class="number">48</span>	<span class="number">49</span>	</span><br><span class="line"><span class="number">51</span>	<span class="number">52</span>	<span class="number">53</span>	<span class="number">54</span>	<span class="number">55</span>	<span class="number">56</span>	<span class="number">57</span>	<span class="number">58</span>	<span class="number">59</span>	</span><br><span class="line"><span class="number">61</span>	<span class="number">62</span>	<span class="number">63</span>	<span class="number">64</span>	<span class="number">65</span>	<span class="number">66</span>	<span class="number">67</span>	<span class="number">68</span>	<span class="number">69</span>	</span><br><span class="line"><span class="number">71</span>	<span class="number">72</span>	<span class="number">73</span>	<span class="number">74</span>	<span class="number">75</span>	<span class="number">76</span>	<span class="number">77</span>	<span class="number">78</span>	<span class="number">79</span>	</span><br><span class="line"><span class="number">81</span>	<span class="number">82</span>	<span class="number">83</span>	<span class="number">84</span>	<span class="number">85</span>	<span class="number">86</span>	<span class="number">87</span>	<span class="number">88</span>	<span class="number">89</span>	</span><br><span class="line"><span class="number">91</span>	<span class="number">92</span>	<span class="number">93</span>	<span class="number">94</span>	<span class="number">95</span>	<span class="number">96</span>	<span class="number">97</span>	<span class="number">98</span>	<span class="number">99</span>	</span><br><span class="line">    </span><br><span class="line"><span class="comment">//continue只是结束本次循环（完全不执行本次循环的任何结果--就算continue上面已经输出了或者执行了其他语句也会被打断），并不会结束整个循环体</span></span><br></pre></td></tr></table></figure>


<h1 id="6-练习"><a href="#6-练习" class="headerlink" title="6. 练习"></a>6. 练习</h1><h3 id="打印一个三角形"><a href="#打印一个三角形" class="headerlink" title="打印一个三角形"></a>打印一个三角形</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">5</span>; j &gt;= i; j--) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;<span class="comment">// 这个循环的作用相当于把打印出来的三角形的左半部分的三角形的左上角填充起来，可以将此循环注释以后查看效果</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"></span><br><span class="line">     *</span><br><span class="line">    ***</span><br><span class="line">   *****</span><br><span class="line">  *******</span><br><span class="line"> *********</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>








]]></content>
  </entry>
  <entry>
    <title>简单的环配置</title>
    <url>/2021/01/25/%E7%AE%80%E5%8D%95%E7%9A%84%E7%8E%AF%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="JAVA开发坏境搭建"><a href="#JAVA开发坏境搭建" class="headerlink" title="JAVA开发坏境搭建"></a>JAVA开发坏境搭建</h1><h2 id="一-JDK的下载与安装"><a href="#一-JDK的下载与安装" class="headerlink" title="一.JDK的下载与安装"></a>一.JDK的下载与安装</h2><p>下载JDK8即可（当前最主流的JDK）</p>
<h2 id="二-环境变量的配置"><a href="#二-环境变量的配置" class="headerlink" title="二.环境变量的配置"></a>二.环境变量的配置</h2><p>1.在系统变量中添加 变量名：<code>JAVA_HOME</code> 值：”JDK的安装地址“<br>2.在系统变量中找到PATH 新建两个变量分别是<code>%JAVA_HOME%\bin</code> <code>%JAVA_HOME%\jre\bin</code><br>三.测试<br>打开CMD 输入java -version<br>四.下载IDEA（一款Java集成开发工具）</p>
<h1 id="Hello-Word"><a href="#Hello-Word" class="headerlink" title="Hello Word"></a>Hello Word</h1><p>1.新建一个java文件</p>
<ul>
<li>文件名后缀 为 .java</li>
<li>Hello.java</li>
</ul>
<p>2 需要注意的点</p>
<ul>
<li>类名需要和文件名相同</li>
<li>一定要注意大小写 <strong>java是大小写敏感的</strong></li>
<li>尽量使用英文</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><p>先用javac编译Hello.java生成Hello.class文件</p>
<p><code>javac Hello.java</code></p>
</li>
<li><p>再用java命令运行class文件</p>
<p><code>java Hello</code></p>
</li>
</ol>
<h1 id="语言的类型"><a href="#语言的类型" class="headerlink" title="语言的类型"></a>语言的类型</h1><h2 id="编译型"><a href="#编译型" class="headerlink" title="编译型"></a>编译型</h2><p>将程序完整的编译成计算机理解的语言给计算机使用（编译器）</p>
<ul>
<li>C </li>
<li>C++</li>
</ul>
<h2 id="解释型"><a href="#解释型" class="headerlink" title="解释型"></a>解释型</h2><p>一边解释一边给计算机使用（有一定的性能损失）</p>
<ul>
<li>JavaScript</li>
<li>python</li>
</ul>
<h2 id="Java程序运行机制"><a href="#Java程序运行机制" class="headerlink" title="Java程序运行机制"></a>Java程序运行机制</h2><p>Java是比较特殊的语言 既有编译过程也有解释，首先Java源文件通过编译器编译成字节码文件（Javac执行）然后通过解释器解释给操作系统平台执行</p>
<h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul>
<li>psvm</li>
<li>sout</li>
</ul>
]]></content>
  </entry>
</search>
